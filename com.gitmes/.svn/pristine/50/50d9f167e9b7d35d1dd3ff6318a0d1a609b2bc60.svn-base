<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
    <title>아이템 관리</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100">
    
    <!-- 상단 네비게이션 -->
    <nav th:replace="~{fragments/top.html :: fragment-top}"></nav>
    
    <div class="flex">
        <!-- 사이드바 -->
        <aside th:replace="~{fragments/sidebar.html :: fragment-sidebar}"></aside>
        
        <!-- 메인 컨텐츠 -->
        <div class="flex-1 p-6">
            <div class="bg-white p-6 rounded-lg shadow">
                <h2 class="text-2xl font-bold mb-4">아이템 관리</h2>
                
				<div class="flex justify-between items-center mb-4">
				    <button class="bg-blue-500 text-white px-4 py-2 rounded" onclick="openModal()">새 아이템 추가</button>

				    <!-- 카테고리 필터 -->
				    <div class="flex items-center space-x-2">
				        <label for="categoryFilter" class="font-medium">카테고리:</label>
				        <select id="categoryFilter" class="border p-2 rounded">
				            <option value="">전체 보기</option>
				            <option th:each="category : ${#sets.toSet(items.?[category != null].![category])}"
				                    th:value="${category}" th:text="${category}">
				            </option>
				        </select>
				    </div>
				</div>
				
                <!-- 아이템 목록 테이블 -->
                <table class="w-full mt-4 border-collapse border border-gray-300">
                    <thead>
                        <tr class="bg-gray-200">
                            <th class="border p-2">이름</th>
                            <th class="border p-2">카테고리</th>
                            <th class="border p-2">단위</th>
                            <th class="border p-2">가격</th>
                            <th class="border p-2">발주 품목</th>
                            <th class="border p-2">환산 계수</th>
                            <th class="border p-2">공정</th>
                            <th class="border p-2">발주 가능</th>
                            <th class="border p-2">생산 가능</th>
                            <th class="border p-2">판매 가능</th>
                            <th class="border p-2">작업</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr th:each="item : ${items}" class="text-center">
                            <td class="border p-2" th:text="${item.itemName}"></td>
                            <td class="border p-2" th:text="${item.category}"></td>
                            <td class="border p-2" th:text="${item.unit}"></td>
                            <td class="border p-2" th:text="${item.formattedPrice}"></td>
                            <td class="border p-2" th:text="${item.orderItem != null ? item.orderItem.itemName : ''}"></td>
                            <td class="border p-2" th:text="${item.formattedConversionFactor}"></td>
                            <td class="border p-2" th:text="${item.process != null ? item.process.name : ''}"></td>
                            <td class="border p-2" th:text="${item.isPurchasable ? '✔' : '✖'}"></td>
                            <td class="border p-2" th:text="${item.isProducible ? '✔' : '✖'}"></td>
                            <td class="border p-2" th:text="${item.isSellable ? '✔' : '✖'}"></td>
                            <td class="border p-2">
                                <button class="bg-yellow-500 text-white px-2 py-1 rounded" th:attr="onclick='editItem(' + ${item.id} + ')'">수정</button>
                                <button class="bg-red-500 text-white px-2 py-1 rounded" th:attr="onclick='deleteItem(' + ${item.id} + ')'">삭제</button>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    
	<!-- 모달 (아이템 추가/수정) -->
	<div id="itemModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden">
	    <div class="bg-white p-8 rounded-lg shadow-lg w-1/3 relative">
	        <button class="absolute top-3 right-3 text-gray-500 hover:text-gray-800" onclick="closeModal()">&times;</button>
	        <h2 class="text-2xl font-bold mb-4 text-center" id="modalTitle">새 아이템 추가</h2>
	        
	        <form id="itemForm" action="/m97/s01/itemInsert" method="post">
	            <input type="hidden" name="id" id="itemId" />

	            <input type="text" name="itemName" id="itemName" class="border w-full p-2 mb-3 rounded" placeholder="아이템 이름" required />
	            <input type="text" name="category" id="category" class="border w-full p-2 mb-3 rounded" placeholder="카테고리" required />
	            <input type="text" name="unit" id="unit" class="border w-full p-2 mb-3 rounded" placeholder="단위" required />
	            <input type="number" name="price" id="price" class="border w-full p-2 mb-3 rounded" placeholder="가격" required />

	            <!-- 공정 선택 -->
	            <label class="block font-medium mb-1">공정 선택</label>
	            <select class="border w-full p-2 mb-3 rounded" name="process" id="process">
	                <option value="">선택 안 함</option>
	                <option th:each="process : ${processes}" th:text="${process.name}" th:value="${process.id}"></option>
	            </select>

	            <!-- 발주 품목 선택 -->
	            <label class="block font-medium mb-1">발주 품목 선택</label>
	            <select class="border w-full p-2 mb-3 rounded" name="orderItem" id="orderItem">
	                <option value="">(선택 안함)</option>
	                <option th:each="item : ${items}" th:text="${item.itemName}" th:value="${item.id}"></option>
	            </select>

	            <!-- 환산 계수 입력 -->
	            <label class="block font-medium mb-1">환산 계수</label>
	            <input type="number" name="conversionFactor" id="conversionFactor" step="0.01" class="border w-full p-2 mb-3 rounded" placeholder="환산 계수 입력" />

	            <!-- 발주, 생산, 판매 가능 체크박스 -->
	            <div class="flex items-center space-x-4 mb-4">
	                <label class="flex items-center">
	                    <input type="checkbox" class="mr-2" name="isPurchasable" id="isPurchasable" /> 발주 가능
	                </label>
	                <label class="flex items-center">
	                    <input type="checkbox" class="mr-2" name="isProducible" id="isProducible" /> 생산 가능
	                </label>
	                <label class="flex items-center">
	                    <input type="checkbox" class="mr-2" name="isSellable" id="isSellable" /> 판매 가능
	                </label>
	            </div>

	            <div class="flex justify-end space-x-2">
	                <button type="button" class="bg-gray-500 text-white px-4 py-2 rounded" onclick="closeModal()">취소</button>
	                <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded">저장</button>
	            </div>
	        </form>
	    </div>
	</div>

    <script>
		function openModal() {
		    document.getElementById("itemModal").classList.remove("hidden");
		}

		function closeModal() {
		    document.getElementById("itemModal").classList.add("hidden");
		    document.getElementById("itemForm").reset(); // 폼 초기화
		    document.getElementById("modalTitle").innerText = "새 아이템 추가";
		    document.getElementById("itemForm").action = "/m97/s01/itemInsert";
		}

		function editItem(id) {			
			
		    // 아이템 ID 설정
		    document.getElementById("itemId").value = id;
		    
		    // 테이블에서 현재 표시된 데이터 사용하기
		    const rows = document.querySelectorAll("table tbody tr");
		    for (let row of rows) {
		        const editButton = row.querySelector(`button[onclick*='editItem(${id})']`);
		        if (editButton) {
		            // 행이 발견되면 셀에서 데이터 추출
		            const cells = row.querySelectorAll("td");
		            document.getElementById("itemName").value = cells[0].textContent.trim();
		            document.getElementById("category").value = cells[1].textContent.trim();
		            document.getElementById("unit").value = cells[2].textContent.trim();
		            document.getElementById("price").value = cells[3].textContent.trim();
		            
		            // 환산 계수 설정
		            document.getElementById("conversionFactor").value = cells[5].textContent.trim() || "1";
		            
		            // orderItem select에서 일치하는 항목 찾기
		            const orderItemName = cells[4].textContent.trim();
		            const orderItemSelect = document.getElementById("orderItem");
		            for (let option of orderItemSelect.options) {
		                if (option.textContent === orderItemName) {
		                    option.selected = true;
		                    break;
		                }
		            }
		            
		            // process select에서 일치하는 항목 찾기
		            const processName = cells[6].textContent.trim();
		            const processSelect = document.getElementById("process");
		            for (let option of processSelect.options) {
		                if (option.textContent === processName) {
		                    option.selected = true;
		                    break;
		                }
		            }
		            
		            // 체크박스 설정
		            document.getElementById("isPurchasable").checked = cells[7].textContent.includes("✔");
		            document.getElementById("isProducible").checked = cells[8].textContent.includes("✔");
		            document.getElementById("isSellable").checked = cells[9].textContent.includes("✔");
		            
		            // 폼 액션 변경
		            document.getElementById("itemForm").action = "/m97/s01/itemUpdate";
		            document.getElementById("modalTitle").innerText = "아이템 수정";
		            
		            // 모달 표시
		            openModal();
		            break;
		        }
		    }
		}

		// 아이템 삭제
		function deleteItem(id) {
		    if (confirm("정말 삭제하시겠습니까?")) {
		        fetch(`/m97/s01/itemDelete/${id}`, { method: "DELETE" })
		            .then(() => location.reload());
		    }
		}

		document.getElementById("categoryFilter").addEventListener("change", function () {
		    const selected = this.value;
		    const rows = document.querySelectorAll("table tbody tr");

		    rows.forEach(row => {
		        const category = row.children[1].textContent.trim(); // 두 번째 셀 = 카테고리
		        if (!selected || category === selected) {
		            row.style.display = "";
		        } else {
		            row.style.display = "none";
		        }
		    });
		});
		
    </script>
</body>
</html>
